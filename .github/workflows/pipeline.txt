#Switch ssh:
ssh-add -D
ssh-add finx
ssh-add txntech


#k8s
#https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html
#Create cluster: eksctl create cluster --instance-selector-vcpus=2 --instance-selector-memory=4
eksctl create cluster --name hello-cluster --region ap-southeast-1
#Deploy app
kubectl create namespace eks-hello-app
#Apply deployment manifest
kubectl apply -f ./aws/eks-hello-deployment.yaml
#Apply service manifest
kubectl apply -f ./aws/eks-hello-service.yaml
#Run shell on a pod - to replace with pod ID. Then curl the localhost:8080/greeting
kubectl exec -it eks-hello-linux-deployment-6dd7c787bb-95mz7 -n eks-hello-app -- /bin/bash
#Check from the bash
curl eks-hello-linux-service


#delete namespace
kubectl delete namespace eks-hello-app
#delete cluster
eksctl delete cluster --name hello-cluster --region ap-southeast-1



#install argocd
#reset password https://github.com/argoproj/argo-cd/blob/master/docs/faq.md
kubectl delete namespace argocd
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
export ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`

#login
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
#example password: rBzhroMjey4L1LDR
argocd login $ARGOCD_SERVER --username admin --password <password here> --insecure