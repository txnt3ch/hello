#Switch ssh:
ssh-add -D
ssh-add finx
ssh-add txntech


#k8s
#https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html
#Create cluster
eksctl create cluster --name hello-cluster --region ap-southeast-1 --instance-types <instance type>

#Deploy app
kubectl create namespace eks-hello-app

#Apply deployment manifest
kubectl apply -f ./aws/eks-hello-deployment.yaml
#Apply service manifest
kubectl apply -f ./aws/eks-hello-service.yaml
#Run shell on a pod - to replace with pod ID. Then curl the localhost:8080/greeting
kubectl exec -it eks-hello2-linux-deployment-84f4d4ff84-mr4nl -n eks-hello-app -- /bin/bash
#Check from the bash
curl eks-hello-linux-service


#delete namespace
kubectl delete namespace eks-hello-app
#delete cluster
eksctl delete cluster --name hello-cluster --region ap-southeast-1



#install argocd
#reset password https://github.com/argoproj/argo-cd/blob/master/docs/faq.md
kubectl delete namespace argocd
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
export ARGOCD_SERVER=`kubectl get svc argocd-server -n argocd -o json | jq --raw-output '.status.loadBalancer.ingress[0].hostname'`

#login
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
#example password: LlPuOmfmIK2--Si3

argocd login $ARGOCD_SERVER --username admin --password <password here> --insecure


//NEED TO LOGIN FIRST
argocd login $ARGOCD_SERVER --username admin --password <password here> --insecure
CONTEXT_NAME=`kubectl config view -o jsonpath='{.current-context}'`
argocd cluster add $CONTEXT_NAME
argocd app create eks-hello-linux-app --repo https://github.com/txnt3ch/argocd-apps.git --path apps --dest-server https://BDE0F041D1A5FE84CA64CFA084BB4707.gr7.ap-southeast-1.eks.amazonaws.com --dest-namespace eks-hello-app
argocd app get eks-hello-linux-app
argocd app sync eks-hello-linux-app